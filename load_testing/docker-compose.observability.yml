version: '3.8'

services:
  # ============================================================================
  # SERVICIOS DE OBSERVABILIDAD PARA PRUEBAS DE CAPACIDAD
  # ============================================================================
  
  # Prometheus - Time Series Database para métricas
  prometheus:
    image: prom/prometheus:latest
    container_name: observability-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
    networks:
      - desarrollo-sw-nube_default
    restart: unless-stopped

  # Grafana - Visualización y Dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: observability-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./observability/grafana/provisioning:/etc/grafana/provisioning
      - ./observability/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/capacity_test_dashboard.json
    networks:
      - desarrollo-sw-nube_default
    depends_on:
      - prometheus
    restart: unless-stopped

  # cAdvisor - Métricas de contenedores Docker
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: observability-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - desarrollo-sw-nube_default
    restart: unless-stopped

  # Node Exporter - Métricas del sistema host
  node-exporter:
    image: prom/node-exporter:latest
    container_name: observability-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - desarrollo-sw-nube_default
    restart: unless-stopped

  # PostgreSQL Exporter - Métricas de la base de datos
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: observability-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@postgres:5432/desarrollo_sw_nube?sslmode=disable"
    networks:
      - desarrollo-sw-nube_default
    depends_on:
      - prometheus
    restart: unless-stopped

  # Redis Exporter - Métricas de Redis
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: observability-redis-exporter
    ports:
      - "9121:9121"
    environment:
      REDIS_ADDR: "redis://redis:6379"
    networks:
      - desarrollo-sw-nube_default
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:

networks:
  desarrollo-sw-nube_default:
    external: true
